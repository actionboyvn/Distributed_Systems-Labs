
package MyBookService_TopDown;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.2
 * Generated source version: 3.0
 * 
 */
@WebService(name = "BookService", targetNamespace = "http://MyBookService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BookService {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws BookExistsEx_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addBook", targetNamespace = "http://MyBookService/", className = "MyBookService_TopDown.AddBook")
    @ResponseWrapper(localName = "addBookResponse", targetNamespace = "http://MyBookService/", className = "MyBookService_TopDown.AddBookResponse")
    public boolean addBook(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        double arg3)
        throws BookExistsEx_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws BookNotFoundEx_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteBook", targetNamespace = "http://MyBookService/", className = "MyBookService_TopDown.DeleteBook")
    @ResponseWrapper(localName = "deleteBookResponse", targetNamespace = "http://MyBookService/", className = "MyBookService_TopDown.DeleteBookResponse")
    public boolean deleteBook(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws BookNotFoundEx_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns MyBookService_TopDown.Book
     * @throws BookNotFoundEx_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBook", targetNamespace = "http://MyBookService/", className = "MyBookService_TopDown.GetBook")
    @ResponseWrapper(localName = "getBookResponse", targetNamespace = "http://MyBookService/", className = "MyBookService_TopDown.GetBookResponse")
    public Book getBook(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0)
        throws BookNotFoundEx_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<MyBookService_TopDown.Book>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllBooks", targetNamespace = "http://MyBookService/", className = "MyBookService_TopDown.GetAllBooks")
    @ResponseWrapper(localName = "getAllBooksResponse", targetNamespace = "http://MyBookService/", className = "MyBookService_TopDown.GetAllBooksResponse")
    public List<Book> getAllBooks();

}
